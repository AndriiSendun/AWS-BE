service: product-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-1
  iam:
    role: arn:aws:iam::295974408458:role/DynamoDBLambdaAccessRole
  environment:
    ACCOUNT_ID: ${aws:accountId}
    REGION: ${aws:region}

plugins:
  - serverless-webpack
  - serverless-offline

package:
  individually: true
  patterns:
    - '!**/*.test.*'

custom:
  productsTable: products
  stocksTable: stocks

functions:
  getProductsList:
    handler: ./src/handler.getProductsList
    environment:
      productsTable: ${self:custom.productsTable}
      stocksTable: ${self:custom.stocksTable}
    events:
      - httpApi:
          path: /products
          method: get

  getProductsById:
    handler: ./src/handler.getProductsById
    environment:
      productsTable: ${self:custom.productsTable}
      stocksTable: ${self:custom.stocksTable}
    events:
      - httpApi:
          path: /products/{id}
          method: get

  createProduct:
    handler: ./src/handler.createProduct
    environment:
      productsTable: ${self:custom.productsTable}
      stocksTable: ${self:custom.stocksTable}
    events:
      - httpApi:
          path: /products
          method: post

  catalogBatchProcess:
    handler: ./src/handler.catalogBatchProcess
    role: arn:aws:iam::295974408458:role/LambdaSQSDynamoDBFUllAccess
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn
          batchSize: 5

resources:
  Resources:
    products:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.productsTable}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    stocks:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stocksTable}
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    catalogItemsQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "catalogItemsQueue"